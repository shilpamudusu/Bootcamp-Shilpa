{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file:///mnt/c/Users/mudus_ujn57l5/work/Bootcamp-Shilpa/t3-crud-app/src/env.mjs"],"sourcesContent":["import { createEnv } from \"@t3-oss/env-nextjs\";\nimport { z } from \"zod\";\n\nexport const env = createEnv({\n  server: {\n    NODE_ENV: z.enum([\"development\", \"test\", \"production\"]),\n  },\n  client: {},\n  runtimeEnv: {\n    NODE_ENV: process.env.NODE_ENV,\n  },\n});"],"names":[],"mappings":";;;AAAA;AACA;;;;;;;;AAEO,MAAM,MAAM,CAAA,GAAA,wJAAA,CAAA,YAAS,AAAD,EAAE;IAC3B,QAAQ;QACN,UAAU,sGAAA,CAAA,IAAC,CAAC,IAAI,CAAC;YAAC;YAAe;YAAQ;SAAa;IACxD;IACA,QAAQ,CAAC;IACT,YAAY;QACV,QAAQ;IACV;AACF"}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":["file:///mnt/c/Users/mudus_ujn57l5/work/Bootcamp-Shilpa/t3-crud-app/src/server/db.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\n\nconst globalForPrisma = globalThis as unknown as {\n  prisma: PrismaClient | undefined;\n};\n\nexport const prisma =\n  globalForPrisma.prisma ??\n  new PrismaClient({\n    log:\n      process.env.NODE_ENV === \"development\" ? [\"query\", \"error\", \"warn\"] : [\"error\"],\n  });\n\nif (process.env.NODE_ENV !== \"production\") globalForPrisma.prisma = prisma;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,kBAAkB;AAIjB,MAAM,SACX,gBAAgB,MAAM,IACtB,IAAI,6HAAA,CAAA,eAAY,CAAC;IACf,KACE,uCAAyC;QAAC;QAAS;QAAS;KAAO;AACvE;AAEF,wCAA2C,gBAAgB,MAAM,GAAG"}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":["file:///mnt/c/Users/mudus_ujn57l5/work/Bootcamp-Shilpa/t3-crud-app/src/server/api/trpc.ts"],"sourcesContent":["import { initTRPC } from \"@trpc/server\";\nimport { type CreateNextContextOptions } from \"@trpc/server/adapters/next\";\nimport superjson from \"superjson\";\nimport { ZodError } from \"zod\";\nimport { prisma } from \"~/server/db\";\n\nexport const createTRPCContext = async (_opts: CreateNextContextOptions) => {\n  return {\n    prisma,\n  };\n};\n\nconst t = initTRPC.context<typeof createTRPCContext>().create({\n  transformer: superjson,\n  errorFormatter({ shape, error }) {\n    return {\n      ...shape,\n      data: {\n        ...shape.data,\n        zodError:\n          error.cause instanceof ZodError ? error.cause.flatten() : null,\n      },\n    };\n  },\n});\n\nexport const createTRPCRouter = t.router;\nexport const publicProcedure = t.procedure;"],"names":[],"mappings":";;;;;AAAA;AAEA;AACA;AACA;;;;;;;;;;;AAEO,MAAM,oBAAoB,OAAO;IACtC,OAAO;QACL,QAAA,4GAAA,CAAA,SAAM;IACR;AACF;AAEA,MAAM,IAAI,gIAAA,CAAA,WAAQ,CAAC,OAAO,GAA6B,MAAM,CAAC;IAC5D,aAAa,kHAAA,CAAA,UAAS;IACtB,gBAAe,EAAE,KAAK,EAAE,KAAK,EAAE;QAC7B,OAAO;YACL,GAAG,KAAK;YACR,MAAM;gBACJ,GAAG,MAAM,IAAI;gBACb,UACE,MAAM,KAAK,YAAY,sGAAA,CAAA,WAAQ,GAAG,MAAM,KAAK,CAAC,OAAO,KAAK;YAC9D;QACF;IACF;AACF;AAEO,MAAM,mBAAmB,EAAE,MAAM;AACjC,MAAM,kBAAkB,EAAE,SAAS"}},
    {"offset": {"line": 163, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 170, "column": 0}, "map": {"version":3,"sources":["file:///mnt/c/Users/mudus_ujn57l5/work/Bootcamp-Shilpa/t3-crud-app/src/schemas/task.ts"],"sourcesContent":["import { z } from \"zod\";\n\nexport const taskSchema = z.object({\n  id: z.string().cuid().optional(),\n  title: z.string().min(1, \"Title is required\").max(100, \"Title is too long\"),\n  description: z.string().max(500, \"Description is too long\").optional(),\n  completed: z.boolean().default(false),\n  createdAt: z.date().optional(),\n  updatedAt: z.date().optional(),\n});\n\n// Modified this schema to exclude completed field from creation\nexport const createTaskSchema = taskSchema.omit({ \n  id: true, \n  createdAt: true, \n  updatedAt: true, \n  completed: true \n});\n\nexport const updateTaskSchema = taskSchema.partial().extend({ id: z.string().cuid() });\nexport const deleteTaskSchema = z.object({ id: z.string().cuid() });\n\nexport type Task = z.infer<typeof taskSchema>;\nexport type CreateTask = z.infer<typeof createTaskSchema>;\nexport type UpdateTask = z.infer<typeof updateTaskSchema>;"],"names":[],"mappings":";;;;;;AAAA;;;;;;AAEO,MAAM,aAAa,sGAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACjC,IAAI,sGAAA,CAAA,IAAC,CAAC,MAAM,GAAG,IAAI,GAAG,QAAQ;IAC9B,OAAO,sGAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,qBAAqB,GAAG,CAAC,KAAK;IACvD,aAAa,sGAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,KAAK,2BAA2B,QAAQ;IACpE,WAAW,sGAAA,CAAA,IAAC,CAAC,OAAO,GAAG,OAAO,CAAC;IAC/B,WAAW,sGAAA,CAAA,IAAC,CAAC,IAAI,GAAG,QAAQ;IAC5B,WAAW,sGAAA,CAAA,IAAC,CAAC,IAAI,GAAG,QAAQ;AAC9B;AAGO,MAAM,mBAAmB,WAAW,IAAI,CAAC;IAC9C,IAAI;IACJ,WAAW;IACX,WAAW;IACX,WAAW;AACb;AAEO,MAAM,mBAAmB,WAAW,OAAO,GAAG,MAAM,CAAC;IAAE,IAAI,sGAAA,CAAA,IAAC,CAAC,MAAM,GAAG,IAAI;AAAG;AAC7E,MAAM,mBAAmB,sGAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAAE,IAAI,sGAAA,CAAA,IAAC,CAAC,MAAM,GAAG,IAAI;AAAG"}},
    {"offset": {"line": 202, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 209, "column": 0}, "map": {"version":3,"sources":["file:///mnt/c/Users/mudus_ujn57l5/work/Bootcamp-Shilpa/t3-crud-app/src/server/api/routers/task.ts"],"sourcesContent":["import { createTRPCRouter, publicProcedure } from \"../trpc\";\nimport { createTaskSchema, updateTaskSchema, deleteTaskSchema } from \"~/schemas/task\";\nimport { TRPCError } from \"@trpc/server\";\n\nexport const taskRouter = createTRPCRouter({\n  getAll: publicProcedure.query(async ({ ctx }) => {\n    try {\n      return await ctx.prisma.task.findMany({\n        orderBy: { createdAt: \"desc\" },\n      });\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (error) {\n      throw new TRPCError({\n        code: \"INTERNAL_SERVER_ERROR\",\n        message: \"Failed to fetch tasks\",\n      });\n    }\n  }),\n\n  create: publicProcedure\n    .input(createTaskSchema)\n    .mutation(async ({ ctx, input }) => {\n      try {\n        return await ctx.prisma.task.create({\n          data: input,\n        });\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      } catch (error) {\n        throw new TRPCError({\n          code: \"INTERNAL_SERVER_ERROR\",\n          message: \"Failed to create task\",\n        });\n      }\n    }),\n\n  update: publicProcedure\n    .input(updateTaskSchema)\n    .mutation(async ({ ctx, input }) => {\n      const { id, ...data } = input;\n      try {\n        return await ctx.prisma.task.update({\n          where: { id },\n          data,\n        });\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      } catch (error) {\n        throw new TRPCError({\n          code: \"NOT_FOUND\",\n          message: \"Task not found\",\n        });\n      }\n    }),\n\n  delete: publicProcedure\n    .input(deleteTaskSchema)\n    .mutation(async ({ ctx, input }) => {\n      try {\n        return await ctx.prisma.task.delete({\n          where: { id: input.id },\n        });\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      } catch (error) {\n        throw new TRPCError({\n          code: \"NOT_FOUND\",\n          message: \"Task not found\",\n        });\n      }\n    }),\n});"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;;;;;;;AAEO,MAAM,aAAa,CAAA,GAAA,qHAAA,CAAA,mBAAgB,AAAD,EAAE;IACzC,QAAQ,qHAAA,CAAA,kBAAe,CAAC,KAAK,CAAC,OAAO,EAAE,GAAG,EAAE;QAC1C,IAAI;YACF,OAAO,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;gBACpC,SAAS;oBAAE,WAAW;gBAAO;YAC/B;QACF,6DAA6D;QAC7D,EAAE,OAAO,OAAO;YACd,MAAM,IAAI,gIAAA,CAAA,YAAS,CAAC;gBAClB,MAAM;gBACN,SAAS;YACX;QACF;IACF;IAEA,QAAQ,qHAAA,CAAA,kBAAe,CACpB,KAAK,CAAC,+GAAA,CAAA,mBAAgB,EACtB,QAAQ,CAAC,OAAO,EAAE,GAAG,EAAE,KAAK,EAAE;QAC7B,IAAI;YACF,OAAO,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;gBAClC,MAAM;YACR;QACF,6DAA6D;QAC7D,EAAE,OAAO,OAAO;YACd,MAAM,IAAI,gIAAA,CAAA,YAAS,CAAC;gBAClB,MAAM;gBACN,SAAS;YACX;QACF;IACF;IAEF,QAAQ,qHAAA,CAAA,kBAAe,CACpB,KAAK,CAAC,+GAAA,CAAA,mBAAgB,EACtB,QAAQ,CAAC,OAAO,EAAE,GAAG,EAAE,KAAK,EAAE;QAC7B,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM,GAAG;QACxB,IAAI;YACF,OAAO,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;gBAClC,OAAO;oBAAE;gBAAG;gBACZ;YACF;QACF,6DAA6D;QAC7D,EAAE,OAAO,OAAO;YACd,MAAM,IAAI,gIAAA,CAAA,YAAS,CAAC;gBAClB,MAAM;gBACN,SAAS;YACX;QACF;IACF;IAEF,QAAQ,qHAAA,CAAA,kBAAe,CACpB,KAAK,CAAC,+GAAA,CAAA,mBAAgB,EACtB,QAAQ,CAAC,OAAO,EAAE,GAAG,EAAE,KAAK,EAAE;QAC7B,IAAI;YACF,OAAO,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;gBAClC,OAAO;oBAAE,IAAI,MAAM,EAAE;gBAAC;YACxB;QACF,6DAA6D;QAC7D,EAAE,OAAO,OAAO;YACd,MAAM,IAAI,gIAAA,CAAA,YAAS,CAAC;gBAClB,MAAM;gBACN,SAAS;YACX;QACF;IACF;AACJ"}},
    {"offset": {"line": 286, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 293, "column": 0}, "map": {"version":3,"sources":["file:///mnt/c/Users/mudus_ujn57l5/work/Bootcamp-Shilpa/t3-crud-app/src/server/api/root.ts"],"sourcesContent":["import { createTRPCRouter } from \"./trpc\";\nimport { taskRouter } from \"./routers/task\";\n\nexport const appRouter = createTRPCRouter({\n  task: taskRouter,\n});\n\nexport type AppRouter = typeof appRouter;"],"names":[],"mappings":";;;AAAA;AACA;;;;;;;;AAEO,MAAM,YAAY,CAAA,GAAA,qHAAA,CAAA,mBAAgB,AAAD,EAAE;IACxC,MAAM,gIAAA,CAAA,aAAU;AAClB"}},
    {"offset": {"line": 308, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 315, "column": 0}, "map": {"version":3,"sources":["file:///mnt/c/Users/mudus_ujn57l5/work/Bootcamp-Shilpa/t3-crud-app/src/pages/api/trpc/%5Btrpc%5D.ts"],"sourcesContent":["import { createNextApiHandler } from \"@trpc/server/adapters/next\";\nimport { env } from \"~/env.mjs\";\nimport { appRouter } from \"~/server/api/root\";\nimport { createTRPCContext } from \"~/server/api/trpc\";\n\nexport default createNextApiHandler({\n  router: appRouter,\n  createContext: createTRPCContext,\n  onError:\n    env.NODE_ENV === \"development\"\n      ? ({ path, error }) => {\n          console.error(\n            `❌ tRPC failed on ${path ?? \"<no-path>\"}: ${error.message}`,\n          );\n        }\n      : undefined,\n});"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;;;;;;;;;;;;uCAEe,CAAA,GAAA,wKAAA,CAAA,uBAAoB,AAAD,EAAE;IAClC,QAAQ,qHAAA,CAAA,YAAS;IACjB,eAAe,qHAAA,CAAA,oBAAiB;IAChC,SACE,oGAAA,CAAA,MAAG,CAAC,QAAQ,KAAK,gBACb,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE;QACd,QAAQ,KAAK,CACX,CAAC,iBAAiB,EAAE,QAAQ,YAAY,EAAE,EAAE,MAAM,OAAO,EAAE;IAE/D,IACA;AACR"}},
    {"offset": {"line": 340, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 346, "column": 0}, "map": {"version":3,"sources":["file:///mnt/c/Users/mudus_ujn57l5/work/Bootcamp-Shilpa/t3-crud-app/node_modules/next/dist/src/server/route-modules/pages-api/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/pages-api/module.js')\n} else {\n  if (process.env.NODE_ENV === 'development') {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.dev.js')\n  } else if (process.env.TURBOPACK) {\n    module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.prod.js')\n  } else {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.prod.js')\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,QAAQ,KAAK,WAAe;QAC1CH,OAAOC,OAAO,GAAGC,QAAQ;IAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACM,SAAS,EAAE;;IAIlC;AACF","ignoreList":[0]}},
    {"offset": {"line": 355, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 361, "column": 0}, "map": {"version":3,"sources":["file:///mnt/c/Users/mudus_ujn57l5/work/Bootcamp-Shilpa/t3-crud-app/node_modules/next/dist/src/server/route-kind.ts"],"sourcesContent":["export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n"],"names":["RouteKind"],"mappings":";;;AAAO,IAAWA,YAAAA,WAAAA,GAAAA,SAAAA,SAAAA;IAChB;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;IAED;;GAEC,GAAA,SAAA,CAAA,YAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,WAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,YAAA,GAAA;IAGD;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;WAtBeA;MAwBjB","ignoreList":[0]}},
    {"offset": {"line": 384, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 390, "column": 0}, "map": {"version":3,"sources":["file:///mnt/c/Users/mudus_ujn57l5/work/Bootcamp-Shilpa/t3-crud-app/node_modules/next/dist/src/build/templates/helpers.ts"],"sourcesContent":["/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */\nexport function hoist(module: any, name: string) {\n  // If the name is available in the module, return it.\n  if (name in module) {\n    return module[name]\n  }\n\n  // If a property called `then` exists, assume it's a promise and\n  // return a promise that resolves to the name.\n  if ('then' in module && typeof module.then === 'function') {\n    return module.then((mod: any) => hoist(mod, name))\n  }\n\n  // If we're trying to hoise the default export, and the module is a function,\n  // return the module itself.\n  if (typeof module === 'function' && name === 'default') {\n    return module\n  }\n\n  // Otherwise, return undefined.\n  return undefined\n}\n"],"names":["hoist","module","name","then","mod","undefined"],"mappings":"AAAA;;;;;;CAMC,GACD;;;AAAO,SAASA,MAAMC,MAAW,EAAEC,IAAY;IAC7C,qDAAqD;IACrD,IAAIA,QAAQD,QAAQ;QAClB,OAAOA,MAAM,CAACC,KAAK;IACrB;IAEA,gEAAgE;IAChE,8CAA8C;IAC9C,IAAI,UAAUD,UAAU,OAAOA,OAAOE,IAAI,KAAK,YAAY;QACzD,OAAOF,OAAOE,IAAI,CAAC,CAACC,MAAaJ,MAAMI,KAAKF;IAC9C;IAEA,6EAA6E;IAC7E,4BAA4B;IAC5B,IAAI,OAAOD,WAAW,cAAcC,SAAS,WAAW;QACtD,OAAOD;IACT;IAEA,+BAA+B;IAC/B,OAAOI;AACT","ignoreList":[0]}},
    {"offset": {"line": 417, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 423, "column": 0}, "map": {"version":3,"sources":["file:///mnt/c/Users/mudus_ujn57l5/work/Bootcamp-Shilpa/t3-crud-app/node_modules/next/dist/src/build/templates/pages-api.ts"],"sourcesContent":["import { PagesAPIRouteModule } from '../../server/route-modules/pages-api/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\n\nimport { hoist } from './helpers'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\n\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export config.\nexport const config = hoist(userland, 'config')\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesAPIRouteModule({\n  definition: {\n    kind: RouteKind.PAGES_API,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  userland,\n})\n"],"names":["PagesAPIRouteModule","RouteKind","hoist","userland","config","routeModule","definition","kind","PAGES_API","page","pathname","bundlePath","filename"],"mappings":";;;;;AAAA,SAASA,mBAAmB,QAAQ,uDAAsD;AAC1F,SAASC,SAAS,QAAQ,0BAAyB;AAEnD,SAASC,KAAK,QAAQ,YAAW;AAEjC,4BAA4B;AAC5B,YAAYC,cAAc,eAAc;;;;;;;;;yMAGzBD,QAAAA,EAAMC,kIAAU,WAAU;AAGlC,MAAMC,2KAASF,QAAAA,EAAMC,kIAAU,UAAS;AAGxC,MAAME,cAAc,qMAAIL,sBAAAA,CAAoB;IACjDM,YAAY;QACVC,8JAAMN,YAAAA,CAAUO,SAAS;QACzBC,MAAM;QACNC,UAAU;QACV,2CAA2C;QAC3CC,YAAY;QACZC,UAAU;IACZ;cACAT;AACF,GAAE","ignoreList":[0]}},
    {"offset": {"line": 454, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}